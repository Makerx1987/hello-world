C51 COMPILER V9.00   LCD1602                                                               12/30/2019 19:09:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD1602.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"
   2          #include <stdio.h>
   3          #include <string.h>
   4          #define uchar unsigned char 
   5          #define uint unsigned int
   6          sbit receive=P1^3;
   7          sbit rs=P2^0;//H数据，L命令
   8          sbit lcden=P2^2;//高脉冲使能，使能脉宽最小150ns
   9          sbit rw=P2^1;
  10          uchar  table[]= "Period     .  ms";
  11          uchar  table1[]="Radio     .    %";
  12          uchar  table2[]= "OUT OF RANGE !  ";
  13          uchar  table3[]= "START RESET ... ";
  14          uchar code num[]={'0','1','2','3','4','5','6','7','8','9'};
  15          long count0=0;
  16          long count1=0;
  17          long count2=0;
  18          
  19          long radio=0;
  20          long period=0;
  21          int a;
  22          //bit flag=0;
  23          //bit first=0;
  24          /********************************************************************
  25          * 名称 : delay(int x)
  26          * 功能 : 延时函数
  27          * 输入 : x 
  28          * 输出 : 无
  29          ***********************************************************************/
  30          void delay(int x)
  31          {       uint y;
  32   1              for(;x>0;x--)
  33   1               {                                                                       
  34   2                      for(y=100;y>0;y--)
  35   2                                      {};
  36   2               }
  37   1      }
  38          /********************************************************************
  39          * 名称 : Time0_Init()
  40          * 功能 : 定时器的初始化，11.0592MZ晶振，0.1ms,921600
  41          * 输入 : 无
  42          * 输出 : 无
  43          ***********************************************************************/
  44          void Time_Init()
  45          {
  46   1         TMOD = 0x19;   //定时器0选用方式1，脉冲触发，定时器1使用方式1，不断计数
  47   1              TH0  = 0xff;      //初值的计算
  48   1              TL0  = 0x9a;    
  49   1              TR0 = 1;                  //启动定时器
  50   1              ET0 = 1;                  //打开定时器中断允许位
  51   1              TH1  = 0xff;      //初值的计算
  52   1              TL1  = 0x9a;    
  53   1              TR1 = 1;                  //启动定时器
  54   1              ET1 = 1;                  //打开定时器中断允许位
  55   1              count0=0;
C51 COMPILER V9.00   LCD1602                                                               12/30/2019 19:09:47 PAGE 2   

  56   1               count1=0;
  57   1              count2=0;
  58   1              EX0 = 1;  //开外部中断0
  59   1              IT0 = 1;  //负边沿触发
  60   1      
  61   1      }
  62          
  63          /********************************************************************
  64          * 名称 : Time_Int()
  65          * 功能 : 定时器中断，中断中实现 脉冲输出
  66          * 输入 : 无
  67          * 输出 : 无
  68          ***********************************************************************/
  69          void Time0_Int() interrupt 1
  70          {
  71   1              TH0 = 0xff;
  72   1              TL0 = 0x9a;
  73   1              count0=count0+1;
  74   1      }
  75          void Time1_Int() interrupt 3
  76          {
  77   1              TH1 = 0xff;
  78   1              TL1 = 0x9a;
  79   1              count1=count1+1;
  80   1      }
  81          /********************************************************************
  82          * 名称 : lcdwrcom(uchar cdat)
  83          * 功能 : LCD1602写数据到LCD1602
  84          * 输入 : cdat 
  85          * 输出 : 无
  86          ***********************************************************************/
  87          void lcdwrdata(uchar dat)
  88          {
  89   1         // dat = ((dat&0x01)<<7)|((dat&0x02)<<5)|((dat&0x04)<<3)|((dat&0x08)<<1)|((dat&0x10)>>1)|((dat&0x20)>>3
             -)|((dat&0x40)>>5)|((dat&0x80)>>7);
  90   1              rs=1;//写数据时RS拉高
  91   1              lcden=1;
  92   1              P0=dat;
  93   1              delay(1);
  94   1              lcden=0;
  95   1              delay(1);
  96   1      }
  97          /********************************************************************
  98          * 名称 : lcdwrcom(uchar cdat)
  99          * 功能 : LCD1602写命令到LCD1602
 100          * 输入 : cdat 
 101          * 输出 : 无
 102          ***********************************************************************/
 103          void lcdwrcom(uchar cdat)//写指令数据到LCD  
 104          {       
 105   1         // cdat = ((cdat&0x01)<<7)|((cdat&0x02)<<5)|((cdat&0x04)<<3)|((cdat&0x08)<<1)|((cdat&0x10)>>1)|((cdat&0
             -x20)>>3)|((cdat&0x40)>>5)|((cdat&0x80)>>7);
 106   1          rs=0;//写指令时RS拉低
 107   1              lcden=1;
 108   1          P0=cdat;//
 109   1              delay(2);//不加此延时将导致不能写入指令，但能写入显示数据
 110   1              lcden=0;
 111   1              delay(2);
 112   1      }
 113          /********************************************************************
 114          * 名称 : lcd_init()
 115          * 功能 : LCD1602初始化
C51 COMPILER V9.00   LCD1602                                                               12/30/2019 19:09:47 PAGE 3   

 116          * 输入 : 无
 117          * 输出 : 无
 118          ***********************************************************************/
 119          void lcd_init()
 120          {
 121   1              lcdwrcom(0x38);//0x38设置显示模式为：16X2 显示,5X7 点阵,8 位数据接口
 122   1              lcdwrcom(0x0c);//打开显示光标闪烁
 123   1              lcdwrcom(0x06);//
 124   1              lcdwrcom(0x01);//
 125   1      }
 126          /********************************************************************
 127          * 名称 : display()
 128          * 功能 : LCD显示函数
 129          * 输入 : 
 130          * 输出 : 无
 131          ***********************************************************************/
 132          void display()
 133          {
 134   1               uchar n;
 135   1               lcdwrcom(0x00|0x80);
 136   1              for(n=0;n<16;n++)
 137   1              {
 138   2                      lcdwrdata(table[n]);
 139   2                      //delay(100);
 140   2              }
 141   1      
 142   1              lcdwrcom(0x40|0x80);
 143   1              for(n=0;n<16;n++)
 144   1              {
 145   2                      lcdwrdata(table1[n]);
 146   2                      //delay(100);
 147   2              }
 148   1         
 149   1      }
 150          /********************************************************************
 151          * 名称 : Outside_Int0()
 152          * 功能 : 外部中断0 的中断处理
 153          * 输入 : 无
 154          * 输出 : 无
 155          ***********************************************************************/
 156          void Outside_Int0(void) interrupt 0     
 157          {
 158   1              
 159   1              count2++;
 160   1              
 161   1      }
 162          /********************************************************************
 163          * 名称 : main()
 164          * 功能 : 主函数
 165          * 输入 : 无
 166          * 输出 : 无
 167          ***********************************************************************/
 168          void main()
 169          {       
 170   1              EA=1;
 171   1              rw=0;   
 172   1              lcden=0;
 173   1              lcd_init();
 174   1              lcdwrcom(0x00|0x80);
 175   1               Time_Init();
 176   1               display();
 177   1               //while(receive==1);
C51 COMPILER V9.00   LCD1602                                                               12/30/2019 19:09:47 PAGE 4   

 178   1              while(1)
 179   1              {
 180   2                 if(count1>99999999)
 181   2                    Time_Init();
 182   2                  /*count3++;
 183   2                 if(receive==1)
 184   2                    {
 185   2                       if(flag==0){
 186   2                          flag=1;
 187   2                          count2++;
 188   2                          }
 189   2                       TR1=0;
 190   2                       TR0=1;          
 191   2                    }
 192   2                  else
 193   2                    {
 194   2                     if(flag==1){
 195   2                          flag=0;
 196   2                          count2++;
 197   2                          }
 198   2                     TR1=1;
 199   2                     TR0=0;
 200   2                    }*/
 201   2                 if(count2!=0)period=(float)(count1)/(float)(count2)*1.25;   
 202   2                 if(period!=0)radio=(float)(count0)/(float)(count1)*10000;
 203   2                 if(period>100000)
 204   2                 {
 205   3                         strcpy(table,table2);
 206   3                         strcpy(table1,table3);
 207   3                         display();
 208   3                         delay(1000);
 209   3                         break;
 210   3                 }
 211   2      
 212   2                 a=(period/10000)%10;
 213   2                 table[7]=num[a];
 214   2                 a=(period/1000)%10;
 215   2                 table[8]=num[a];
 216   2                 a=(period/100)%10;
 217   2                 table[9]=num[a];
 218   2                 a=(period/10)%10;
 219   2                 table[10]=num[a];
 220   2                 table[11]='.';
 221   2                 a=(period)%10;
 222   2                 table[12]=num[a]; 
 223   2      
 224   2                 a=(radio/1000)%10;
 225   2                 table1[8]=num[a];
 226   2                 a=(radio/100)%10;
 227   2                 table1[9]=num[a];
 228   2                 table1[10]='.';
 229   2                 a=(radio/10)%10;
 230   2                 table1[11]=num[a];
 231   2                 a=(radio)%10;
 232   2                 table1[12]=num[a];
 233   2      
 234   2                 
 235   2                  
 236   2      
 237   2                    
 238   2                 display();
 239   2                 //delay(1);
C51 COMPILER V9.00   LCD1602                                                               12/30/2019 19:09:47 PAGE 5   

 240   2                 
 241   2              }
 242   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    996    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     90    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
