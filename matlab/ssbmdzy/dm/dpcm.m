clear all;
clc;
[y,fs]= audioread('test.m4a');
x = y(:,1);% 音道
x = x';
lenx = length(x); 
SNR(1:3) = 0;
subplot(221);
plot(x); 
title ('语音片段');
% 一阶DPCM预测器
A(1,:) = x(1:lenx-1);
C = x(2:lenx); 
B = C/A ;% 得到预测器系数，C-B*A平方和最小 
% D = 残差信号
D(1) = x(1); 
r(1) = round(D(1)/0.01)*0.01;
for i = 2:lenx
    D(i) = r(i-1)*B'; % 预测值
    D(i) = round((x(i)-D(i))/0.01)*0.01; % 残差量化还原 
    r(i) = r(i-1)*B'+D(i); % 更新预测器 
end
subplot(222); 
plot(D); 
axis([-inf inf -0.03 0.06]);
title ('使用一阶预测器的残差序列');
% 二阶DPCM预测器
A2(1,:) = x(1:lenx-2);
A2(2,:) = x(2:lenx-1); 
C2 = x(3:lenx);
B2(1,:) = C2/A2(1,:);
B2(2,:) = C2/A2(2,:);
% D = 残差信号
D2(1) = x(1);
D2(2) = x(2); 
r2(1) = round(D2(1)/0.01)*0.01;
r2(2) = round(D2(2)/0.01)*0.01;
for i = 3:lenx
    D2(i) = (r2(i-2)*B2(1,:)'+r2(i-1)*B2(2,:)')/2; % 预测值
    D2(i) = round((x(i)-D2(i))/0.01)*0.01; % 残差量化还原 
    r2(i) = (r2(i-2)*B2(1,:)'+r2(i-1)*B2(2,:)')/2+D2(i); % 更新预测器 
end
subplot(223); 
plot(D2); 
axis([-inf inf -0.03 0.06]);
title ('使用二阶预测器的残差序列');
% 三阶DPCM预测器
A3(1,:) = x(1:lenx-3);
A3(2,:) = x(2:lenx-2); 
A3(3,:) = x(3:lenx-1); 
C3 = x(4:lenx);
B3(1,:) = C3/A3(1,:);
B3(2,:) = C3/A3(2,:);
B3(3,:) = C3/A3(3,:);
% D = 残差信号
D3(1) = x(1);
D3(2) = x(2); 
D3(3) = x(3); 
r3(1) = round(D3(1)/0.01)*0.01;
r3(2) = round(D3(2)/0.01)*0.01;
r3(3) = round(D3(3)/0.01)*0.01;
for i = 4:lenx
    D3(i) = r3(i-3)*B3(1,:)'*1/7+r3(i-2)*B3(2,:)'*2/7+r3(i-1)*B3(3,:)'*4/7; % 预测值
    D3(i) = round((x(i)-D3(i))/0.01)*0.01; % 残差量化还原 
    r3(i) = r3(i-3)*B3(1,:)'*1/7+r3(i-2)*B3(2,:)'*2/7+r3(i-1)*B3(3,:)'*4/7+D3(i); % 更新预测器 
end
subplot(224); 
plot(D3); 
axis([-inf inf -0.03 0.06]);
title ('使用三阶预测器的残差序列');